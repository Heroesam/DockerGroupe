services:
    waf-nginx:
        build: ./config/waf
        ports:
            - "8080:80"
        volumes:
            - ./config/waf/nginx.conf:/etc/nginx/nginx.conf
            - ./config/waf/modsecurity.conf:/etc/modsecurity/modsecurity.conf
        depends_on:
            - app

    traefik:
        image: traefik:latest
        command:
            - "--api.insecure=true"
            - "--providers.docker=true"
            - "--entrypoints.web.address=:80"
            - "--api.insecure=true"
            - "--providers.docker=true"
            - "--entrypoints.web.address=:80"
            - "--log.level=DEBUG"
        ports:
            - "80:80"
            - "8080:8080"
        networks:
            - traefik
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock

    suricata:
        image: jasonish/suricata:latest
        network_mode: "host"
        volumes:
            - ./config/ids/suricata.yaml:/etc/suricata/suricata.yaml

    wazuh:
        image: wazuh/wazuh:latest
        ports:
            - "5601:5601"
            - "1514:1514/udp"
        environment:
            - ELASTICSEARCH_HOST=elasticsearch
        depends_on:
            - elasticsearch

    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
        environment:
            - discovery.type=single-node
        ports:
            - "9200:9200"

    prometheus:
        image: prom/prometheus:latest
        ports:
            - "9090:9090"
        volumes:
            - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

    grafana:
        image: grafana/grafana:latest
        ports:
            - "3000:3000"
        volumes:
            - ./config/prometheus/grafana.ini:/etc/grafana/grafana.ini
        depends_on:
            - prometheus

    app:
        image: nginx:alpine
        ports:
            - "8082:80"
        volumes:
            - ./config/waf/app.conf:/etc/nginx/conf.d/default.conf